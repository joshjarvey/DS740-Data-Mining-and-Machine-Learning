require(mosaic)   # Load additional packages here
# Some customization.  You can alter or delete as desired (if you know what you are doing).
#trellis.par.set(theme=theme.mosaic()) # change default color scheme for lattice
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
library(ISLR)
data(Auto)
force(Auto)
library(ISLR)
data(Auto)
Auto$Domestic = ifelse(Auto$origin = 1,"1","0")
library(ISLR)
data(Auto)
Auto$Domestic = ifelse(Auto$origin == "1","1","0")
library(ISLR)
data(Auto)
Auto$Domestic = as.factor(ifelse(Auto$origin == "1","1","0"))
View(Auto)
library(ISLR)
data(Auto)
#create a new factor variable called domestic where 1 = US, 0 = not domestic
Auto$Domestic = as.factor(ifelse(Auto$origin == "1","1","0"))
table(Auto)
library(ISLR)
data(Auto)
#create a new factor variable called domestic where 1 = US, 0 = not domestic
Auto$Domestic = as.factor(ifelse(Auto$origin == "1","1","0"))
table(Auto$Domestic)
boxplot(mpg~Domestic, data = Auto)
boxplot(mpg~Domestic, data = Auto, main = "Distribution of Automobile MPG by Foreign vs. Domestic build")
#Question 3
library(MASS)
ldafit1 = lda(Domestic~mpg, data = Auto)
#Question 4
ldafit1
View(ldafit1)
ldafit1$counts
#Question 3
#load the library
library(MASS)
#fit lda model using mpg as a predictor to domestic
ldafit1 = lda(Domestic~mpg, data = Auto)
ldafit1$means
#Question 4
predclass1 = predict(ldafit1,data = Auto)
View(predclass1)
predclass1 = predict(ldafit1,data = Auto)$class
#
table(predclass1,Auto$Domestic)
predclass1 = predict(ldafit1,data = Auto)$class
#
table(Auto$Domestic,predclass1)
predclass1 = predict(ldafit1,data = Auto)$class
#
table(Auto$Domestic,predclass1)
table(Auto$Domestic,predclass1)
predclass1 = predict(ldafit1,data = Auto)$class
#
table(table(predclass1,Auto$Domestic)
table(Auto$Domestic,predclass1)
predclass1 = predict(ldafit1,data = Auto)$class
#
table(predclass1,Auto$Domestic)
table(Auto$Domestic,predclass1)
#predict the classes in the original data using the lda model 1.
predclass1 = predict(ldafit1,data = Auto)$class
#create a confusion matrix
table(predclass1,Auto$Domestic)
#Question 7
#sensitivity = true positive / (true positive + false negative)
204 / (204+41)
#Question 8
#specificity = true negatives / (true negatives + false positives)
90 / (90+57)
boxplot(cylinders~Domestic, data = Auto)
boxplot(cylinders~Domestic, data = Auto)
boxplot(displacement~Domestic, data = Auto)
boxplot(horsepower~Domestic, data = Auto)
boxplot(weight~Domestic, data = Auto)
boxplot(acceleration~Domestic, data = Auto)
boxplot(year~Domestic, data = Auto)
library(pROC)
library(pROC)
library(pROC)
myroc = roc(response = Auto$Domestic, predictor = Auto$displacement)
plot(myroc)
library(pROC)
myroc = roc(response = Auto$Domestic, predictor = Auto$displacement)
plot(myroc)
auc(myroc)
library(pROC)
myroc = roc(response = Auto$Domestic, predictor = Auto$weight)
plot(myroc)
auc(myroc)
library(pROC)
myroc = roc(response = Auto$Domestic, predictor = Auto$displacement)
plot(myroc)
auc(myroc)
myroc = roc(response = Auto$Domestic, predictor = Auto$mpg)
#plot the roc object
plot(myroc)
#check AUC, because why not :)
auc(myroc)
