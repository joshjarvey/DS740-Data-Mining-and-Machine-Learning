require(mosaic)   # Load additional packages here
# Some customization.  You can alter or delete as desired (if you know what you are doing).
trellis.par.set(theme=theme.mosaic()) # change default color scheme for lattice
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
#load library and dataset.
library(arules)
data("Groceries")
#169 columns (products) in this dataset.
summary(Groceries)
#9835 rows (transactions/customers) in this dataset.
summary(Groceries)
#the largest number of items is the max from the summary - 32 items.
summary(Groceries)
#create a bar plot of items with a frequency of more than 5% in the transactions data.
itemFrequencyPlot(Groceries, support=0.05)
#mine all rules with support > 0.001 and confidence > 0.50. Apriori() already does filter to 1 consequence.
rules = apriori(Groceries, parameter = list(support = 0.001, confidence = 0.50))
#find the top 10 rules by lift, and display them.
top10 = head(rules, n = 10, by = "lift")
arules::inspect(top10)
#find the top 10 rules by lift, and display them.
top10 = head(rules, n = 50, by = "lift")
arules::inspect(top10)
#find the top 10 rules by lift, and display them.
top10 = head(rules, n = 1000, by = "lift")
arules::inspect(top10)
#find the top 10 rules by lift, and display them.
top10 = head(rules, n = 2000, by = "lift")
arules::inspect(top10)
arules::inspect(rules)
arules::inspect(rules)[5000:]
#find the top 10 rules by lift, and display them.
top10 = head(rules, n = 2000, by = "lift")
arules::inspect(top10)
#find the top 10 rules by lift, and display them.
top10 = tail(rules, n = 2000, by = "lift")
arules::inspect(top10)
